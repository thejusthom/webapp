name: Create Custom image using Packer

on:
  pull_request:
    branches:
      - 'main'

jobs:
  packer:
    name: Building Jar and Creating Custom Packer Image
    runs-on: ubuntu-latest
    env:
      MYSQL_DATABASE_URL: ${{secrets.MYSQL_DATABASE_URL}}
      MYSQL_DATABASE: ${{secrets.MYSQL_DATABASE}}
      MYSQL_DATABASE_USERNAME: ${{secrets.MYSQL_DATABASE_USERNAME}}
      MYSQL_DATABASE_PASSWORD: ${{secrets.MYSQL_DATABASE_PASSWORD}}
      PKR_VAR_project_id: ${{vars.PROJECT_ID}}
      PKR_VAR_source_image_family: ${{vars.SOURCE_IMAGE_FAMILY}}
      PKR_VAR_zone                : ${{vars.ZONE}}
      PKR_VAR_ssh_username        : ${{vars.SSH_USERNAME}}
      PKR_VAR_image_name          : ${{vars.IMAGE_NAME}}
      PKR_VAR_scripts_path        : ${{vars.SCRIPTS_PATH}}
      PKR_VAR_jar_source          : ${{vars.JAR_SOURCE}}
      PKR_VAR_jar_destination     : ${{vars.JAR_DESTINATION}}
      PKR_VAR_network : ${{vars.NETWORK}}
      PKR_VAR_service_account_email : ${{secrets.GCP_SERVICE_ACCOUNT_EMAIL}}

    steps:
      - uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: maven

      - name: Preparing log directory
        run: |
          sudo chmod -R 733 /var/log

      - name: Initialize MYSQL
        run: |
          sudo /etc/init.d/mysql start
          mysql -h localhost -e "CREATE DATABASE IF NOT EXISTS $MYSQL_DATABASE;" -u$MYSQL_DATABASE_USERNAME -p$MYSQL_DATABASE_PASSWORD

      - name: Google Cloud Platform Auth
        uses: 'google-github-actions/auth@v2'
        with:
          credentials_json: '${{secrets.SERVICE_ACCOUNT_JSON}}'

      - name: Build with Maven
        run: mvn -B package --file pom.xml

      - name: Setup Packer
        uses: hashicorp/setup-packer@main
        id: setup-packer

      - name: Init Packer
        run: packer init packer/custom-image.pkr.hcl

      - name: Build image
        run: packer build ./packer/.
        env: 
          name: Building custom image with Packer
          runs-on: ubuntu-latest

      - id: 'secrets'
        uses: 'google-github-actions/get-secretmanager-secrets@v2'
        with:
          secrets: |-
            DB_URL:projects/1021504010524/secrets/DB_URL/versions/1
            DB_NAME:projects/1021504010524/secrets/DB_NAME/versions/1
             DB_PASSWORD:projects/1021504010524/secrets/DB_PASSWORD/versions/1

      - name: Create new Instance Template version
        run: |
            gcloud compute instance-templates create vm-instance-template \
            --machine-type n2-standard-2 \
            --instance-template-region=us-east1 \
            --create-disk=image=projects/test-cloud-csye6225/global/images/centos8-java8-custom-image-1712136717,size=100,boot=true,type=pd-balanced,auto-delete=yes \
            --network=projects/test-cloud-csye6225/global/networks/vpc-network  
            --subnet=projects/test-cloud-csye6225/regions/us-east1/subnetworks/webapp \
            --metadata startup-script="echo 'MYSQL_DATABASE_URL=${{steps.secrets.outputs.DB_URL}}' > .env && echo 'MYSQL_DATABASE_USERNAME=${{steps.secrets.outputs.DB_NAME}}' >> .env && echo 'MYSQL_DATABASE_PASSWORD=${{steps.secrets.outputs.DB_PASSWORD}}' >> .env && sudo mv .env /opt/ && sudo chown csye6225:csye6225 /opt/.env && sudo setenforce 0 && sudo systemctl daemon-reload && sudo systemctl restart webapp-launch.service" \
            --service-account test-cloud@test-cloud-csye6225.iam.gserviceaccount.com \
            --tags=vm-instance

      - name: 'Linking New Instance Template to Managed Instance group'
        run: | 
            gcloud compute instance-groups managed set-instance-template \
            projects/test-cloud-csye6225/regions/us-east1/instanceGroupManagers/webapp-instance-group-manager \
            --template=projects/test-cloud-csye6225/regions/us-east1/instanceTemplates/vm-instance-template
  
      - name: 'Initiate the Rolling Update to apply the new instance template to the managed instance group'
        run: |
            gcloud compute instance-groups managed rolling-action start-update projects/test-cloud-csye6225/regions/us-east1/instanceGroupManagers/webapp-instance-group-manager \
            --version=template=projects/test-cloud-csye6225/regions/us-east1/instanceTemplates/vm-instance-template

      - name: 'Verify the completion of rolling updates by checking the "version target reached" flag.'
        run: |
              gcloud compute instance-groups managed wait-until projects/test-cloud-csye6225/regions/us-east1/instanceGroupManagers/webapp-instance-group-manager 
              --version-target-reached \
              gcloud compute instance-groups managed describe projects/test-cloud-csye6225/regions/us-east1/instanceGroupManagers/webapp-instance-group-manager \
              --format=json | jq '.versionTargetReached'